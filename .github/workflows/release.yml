name: Create Release

# on:
#     push:
#         branches:
#             - main

on: workflow_dispatch

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Read release notes and version from RELEASE
              id: read_release_notes_and_version
              run: |
                  release_notes=$(tail -n +2 RELEASE)
                  version=$(head -n 1 RELEASE)
                  echo "::set-output name=release_notes::$release_notes"
                  echo "::set-output name=version::$version"

            - name: Find mcworld and mcaddon files
              id: find_files
              run: |
                  mcworld_files=$(find . -name "informant_*.*.*.mcworld" -print0 | tr '\0' '\n' | paste -sd ',' -)
                  mcaddon_files=$(find . -name "informant_addon_*-*-*.mcaddon" -print0 | tr '\0' '\n' | paste -sd ',' -)
                  echo "::set-output name=mcworld_files::$mcworld_files"
                  echo "::set-output name=mcaddon_files::$mcaddon_files"

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ steps.read_release_notes_and_version.outputs.version }}
                  release_name: ${{ steps.read_release_notes_and_version.outputs.version }}
                  body: ${{ steps.read_release_notes_and_version.outputs.release_notes }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload mcworld files
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ steps.find_files.outputs.mcworld_files }}
                  asset_name: $(basename ${{ steps.find_files.outputs.mcworld_files }})
                  asset_content_type: application/zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload mcaddon files
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ steps.find_files.outputs.mcaddon_files }}
                  asset_name: $(basename ${{ steps.find_files.outputs.mcaddon_files }})
                  asset_content_type: application/zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
